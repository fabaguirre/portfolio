---
import ButtonMenu from "@components/ButtonMenu.astro";

import SunIcon from "@icons/Sun.astro";
import MoonIcon from "@icons/Moon.astro";
import MacIcon from "@icons/Mac.astro";

const THEMES = [
  {
    value: "light",
    name: "Claro",
    Icon: SunIcon,
  },
  {
    value: "dark",
    name: "Oscuro",
    Icon: MoonIcon,
  },
  {
    value: "system",
    name: "Sistema",
    Icon: MacIcon,
  },
];
---

<ButtonMenu>
  <Fragment>
    <span class="sr-only">Elige el tema</span>
    {
      THEMES.map(({ Icon, value }) => (
        <Icon
          data-theme={value}
          aria-label={`Tema ${value}`}
          class="theme-toggle-icon size-5"
        />
      ))
    }
  </Fragment>

  <Fragment slot="menu">
    {
      THEMES.map((theme) => (
        <li>
          <button
            data-theme={theme.value}
            class="themes-menu-option w-full rounded px-2 py-1.5 text-start hover:bg-black/10 dark:hover:bg-black/20"
          >
            {theme.name}
          </button>
        </li>
      ))
    }
  </Fragment>
</ButtonMenu>

<script is:inline>
  let remove = null;
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");
  const icons = document.querySelectorAll(".theme-toggle-icon");

  const getThemePreference = () => {
    if (typeof window.localStorage !== "undefined") {
      return window.localStorage.getItem("theme") ?? "system";
    }

    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  const updateIcon = (themePreference) =>
    icons.forEach((element) => {
      element.style.scale =
        element.dataset.theme === themePreference ? "1" : "0";
    });

  const updateTheme = () => {
    if (remove != null) {
      remove();
    }
    matchMedia.addEventListener("change", updateTheme);
    remove = () => {
      matchMedia.removeEventListener("change", updateTheme);
    };

    const themePreference = getThemePreference();
    const isDark =
      themePreference === "dark" ||
      (themePreference === "system" && matchMedia.matches);

    updateIcon(themePreference);
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");
    document.documentElement.style.colorScheme = isDark ? "dark" : "light";
  };

  updateTheme();

  function onThemeClick(e) {
    window.localStorage.setItem("theme", e.target.dataset.theme);
    updateTheme();
  }

  document.querySelectorAll(".themes-menu-option").forEach((element) => {
    element.addEventListener("click", onThemeClick);
  });
</script>
