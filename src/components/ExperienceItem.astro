---
interface Props {
  title: string;
  company: string;
  companyIcon: any;
  type: "remote" | "onsite" | "hybrid";
  startDate: string;
  endDate: string;
  description: string[];
}

const {
  companyIcon: CompanyIcon,
  title,
  company,
  startDate,
  endDate,
  description,
  type,
} = Astro.props;

const typeClass = {
  remote: "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300",
  onsite: "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300",
  hybrid:
    "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300",
};

const typeColor = typeClass[type];

const dateRange = `${new Date(startDate).toLocaleDateString("en-US", {
  month: "long",
  year: "numeric",
})} - ${new Date(endDate).toLocaleDateString("en-US", {
  month: "long",
  year: "numeric",
})}`;
---

<article>
  <span
    class="absolute -start-3 flex h-6 w-6 items-center justify-center rounded-full bg-blue-100 ring-8 ring-white dark:bg-blue-900 dark:ring-gray-900"
  >
    <CompanyIcon class="size-4 text-blue-800 dark:text-blue-300" />
  </span>

  <header>
    <h3
      class="mb-2 flex items-center text-lg font-semibold text-gray-900 dark:text-white"
    >
      {title}
      <span
        class:list={[
          `me-2 ms-3 rounded px-2.5 py-0.5 text-sm font-medium capitalize`,
          `${typeColor}`,
        ]}
      >
        {type}
      </span>
    </h3>

    <h4 class="mb-1">
      <a
        class="hover:underline"
        href="https://www.info.fractalup.com/"
        target="_blank"
      >
        {company}
      </a>
    </h4>

    <time
      class="block text-sm font-normal leading-none text-gray-400 dark:text-gray-500"
    >
      {dateRange}
    </time>
  </header>

  <div class="mt-7 space-y-5">
    {
      description.map((desc) => (
        <p class="text-pretty text-base font-normal text-gray-600 dark:text-gray-400">
          {desc}
        </p>
      ))
    }
  </div>
</article>
